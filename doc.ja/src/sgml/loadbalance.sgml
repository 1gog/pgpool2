<!-- doc/src/sgml/config.sgml -->

<sect1 id="runtime-config-load-balancing">
<!--
  <title>Load Balancing</title>
-->
  <title>負荷分散</title>

  <para>
<!--
    <productname>Pgpool-II</productname> load balancing of SELECT queries
    works with Master Slave mode (<xref linkend="runtime-config-master-slave-mode">)
    and Replication mode (<xref linkend="runtime-config-replication-mode">). When enabled
    <productname>Pgpool-II</productname> sends the writing queries to the
    <acronym>primay node</acronym> in Master Slave mode, all of the backend nodes
    in Replication mode, and other queries get load balanced among all backend nodes.
    To which node
    the load balancing mechanism sends read queries is decided at the
    session start time and will not be changed until the session
    ends. The only exception is by writing special SQL comments. See
    below for more details.
-->
<productname>Pgpool-II</productname>のSELECTクエリの負荷分散はマスタースレーブモード（<xref linkend="runtime-config-master-slave-mode">）とレプリケーションモード（<xref linkend="runtime-config-replication-mode">）で動作します。
有効時、<productname>Pgpool-II</productname>は更新を伴うクエリを、マスタースレーブモードでは<acronym>プライマリノード</acronym>に、レプリケーションモードでは全てのバックエンドノードに対し送信します。
そして、その他のクエリは全てのバックエンドの間で負荷分散されます。
負荷分散メカニズムが参照クエリをどのノードに送信するかはセッション開始時に決められ、セッションの終了まで変更されません。
唯一の例外は特別なSQLコマンドが発行されたときです。
詳細については以下をご覧ください。
  </para>
  <note>
    <para>
<!--
      Queries which are sent to primary node or all backend nodes because they cannot be balanced are
      also accounted for in the load balancing algorithm.
-->
負荷分散ができないためにプリマリノードまたは全バックエンドノードに送られクエリもまた、負荷分散アルゴリズムで判断されます。
    </para>
  </note>
  <note>
    <para>
<!--
      If you don't want a query that qualifies for the load balancing to be
      load balanced by <productname>Pgpool-II</productname>, you can put
      <emphasis>/*NO LOAD BALANCE*/</emphasis> comment before the <acronym>SELECT
      </acronym> statement. This will disable the load balance of the particular query
      and <productname>Pgpool-II</productname> will send it to the master node (the primary node in Master Slave mode).
-->
もし負荷分散対象のクエリを<productname>Pgpool-II</productname>に負荷分散してほしくない場合には、<acronym>SELECT</acronym>文の前の<emphasis>/*NO LOAD BALANCE*/</emphasis>コメントを付与することができます。
これにより、そのクエリの負荷分散は無効となり、<productname>Pgpool-II</productname>はこれをマスターノード（マスタースレーブモードではプライマリノード）に送信します。
    </para>
  </note>

  <variablelist>

    <varlistentry id="guc-load-balance-mode" xreflabel="load_balance_mode">
      <term><varname>load_balance_mode</varname> (<type>boolean</type>)
        <indexterm>
          <primary><varname>load_balance_mode</varname> configuration parameter</primary>
        </indexterm>
      </term>
      <listitem>
        <para>
<!--
          When set to on, <productname>Pgpool-II</productname> enables the
          load balancing on incoming <acronym>SELECT</acronym> queries.
          i.e. <acronym>SELECT</acronym> queries from the clients gets distributed to
          the configured <productname>PostgreSQL</> backends.
          Default is off.
-->
onの設定すると、<productname>Pgpool-II</productname>は入ってきた<acronym>SELECT</acronym>クエリに対する負荷分散を有効にします。
すなわち、クライアントからの<acronym>SELECT</acronym>クエリは設定された<productname>PostgreSQL</>バックエンドに振り分けます。
デフォルトはoffです。
        </para>
        <para>
<!--
          This parameter can only be set at server start.
-->
このパラメータはサーバ起動時にのみ設定可能です。
        </para>
      </listitem>
    </varlistentry>

   <varlistentry id="guc-ignore-leading-white-space" xreflabel="ignore_leading_white_space">
      <term><varname>ignore_leading_white_space</varname> (<type>boolean</type>)
        <indexterm>
          <primary><varname>ignore_leading_white_space</varname> configuration parameter</primary>
        </indexterm>
      </term>
      <listitem>
        <para>
<!--
          When set to on, <productname>Pgpool-II</productname> ignores the
          white spaces at the beginning of SQL queries in load balancing.
          It is useful if used with APIs like DBI/DBD:Pg which adds
          white spaces against the user's intention.
-->
onに設定すると、負荷分散の際にSQL文行頭の空白を無視します(全角スペースは無視されません)。
これは、DBI/DBD:Pgのように、ユーザの意図に反してに空白を追加するようなAPIを使っているときに有用です。
        </para>
        <para>
<!--	
          This parameter can be changed by reloading the <productname>Pgpool-II</> configurations.
-->
このパラメータは<productname>Pgpool-II</>の設定を再読み込みすることで変更可能です。
        </para>
      </listitem>
    </varlistentry>

   <varlistentry id="guc-white-function-list" xreflabel="white_function_list">
      <term><varname>white_function_list</varname> (<type>string</type>)
        <indexterm>
          <primary><varname>white_function_list</varname> configuration parameter</primary>
        </indexterm>
      </term>
      <listitem>
        <para>
<!--
          Specifies a comma separated list of function names that
          <emphasis>DO NOT</emphasis> update the database. SELECTs including
          functions <emphasis>not specified </emphasis> in this list are not load balanced.
          These are replicated among all the DB nodes in Replication mode,
          sent to the primary node only in Maste Slave mode.
-->
データベースに対して更新を<emphasis>行なわない</emphasis>関数名をコンマ区切りで指定します。
このリストに<emphasis>指定されていない</emphasis>関数呼び出しを含むSELECTは負荷分散されません。
これらのクエリはレプリケーションモードにおいてはすべてのDBノードで複製され、マスタースレーブモードにおいてはプライマリノードにのみ送信されます。
        </para>
        <para>
<!--
          You can use regular expression to match function names,
		  to which <literal>^</> and <literal>$</> are automatically added.
-->
関数名のマッチングに正規表現を使うことができます。
正規表現には自動的に<literal>^</literal>と<literal>$</literal>が付与されます。
        </para>

        <example id="example-white-function-list-1">
<!--
          <title>Using regular expression</title>
-->
          <title>正規表現の使用</title>
          <para>
<!--
            If you have prefixed all your read only function
            with 'get_' or 'select_', You can
            set the <xref linkend="guc-white-function-list"> like below:
-->
もし読み出しのみを行う関数が"get_"あるいは"select_"で始まるようにしてあるのであれば、<xref linkend="guc-white-function-list">を以下のように設定可能です。
          <programlisting>
white_function_list = 'get_.*,select_.*'
          </programlisting>
          </para>
        </example>

        <para>
<!--
          This parameter can be changed by reloading the <productname>Pgpool-II</> configurations.
-->
このパラメータは<productname>Pgpool-II</>の設定を再読み込みすることで変更可能です。
        </para>
      </listitem>
    </varlistentry>

   <varlistentry id="guc-black-function-list" xreflabel="black_function_list">
      <term><varname>black_function_list</varname> (<type>string</type>)
        <indexterm>
          <primary><varname>black_function_list</varname> configuration parameter</primary>
        </indexterm>
      </term>
      <listitem>
        <para>
<!--
          Specifies a comma separated list of function names that
          <emphasis>DO</emphasis> update the database.
          SELECTs including functions <emphasis>specified</emphasis> in this list are
		  not load balanced.
          These are replicated among all the DB nodes in Replication mode,
          sent to the primary node only in Maste Slave mode.
-->
データベースに対して更新を<emphasis>行う</emphasis>関数名をコンマ区切りで指定します。
このリストに<emphasis>指定された</emphasis>関数呼び出しを含むSELECTは負荷分散されません。
これらのクエリはレプリケーションモードにおいてはすべてのDBノードで複製され、マスタースレーブモードにおいてはプライマリノードにのみ送信されます。
        </para>
        <para>
<!--
          You can use regular expression to match function names,
		  to which <literal>^</> and <literal>$</> are automatically added.
-->
関数名のマッチングに正規表現を使うことができます。
正規表現には自動的に<literal>^</literal>と<literal>$</literal>が付与されます。
        </para>

        <example id="example-black-function-list-1">
<!--
          <title>Using regular expression</title>
-->
          <title>正規表現の使用</title>
          <para>
<!--
            If you have prefixed all your updating functions
            with 'set_', 'update_', 'delete_' or 'insert_', You can
            set the <xref linkend="guc-black-function-list"> like below:
-->
もし更新を行う関数が"set_"、"update_"、"delete_"、あるいは"insert_"で始まるようにしてあるのであれば、<xref linkend="guc-black-function-list">を以下のように設定可能です。
          <programlisting>
black_function_list = 'nextval,setval,set_.*,update_.*,delete_.*,insert_.*'
          </programlisting>
          </para>
        </example>

        <note>
          <para>
<!--
            <xref linkend="guc-black-function-list"> and <xref linkend="guc-white-function-list">
            are mutually exclusive and only one of the two lists can be set in the configuration.
-->
<xref linkend="guc-black-function-list">と<xref linkend="guc-white-function-list">は互いに排他的で、２つのリストの内、どちらか一方のみ設定することができます。
          </para>
        </note>

        <example id="example-black-function-list-2">
<!--
          <title>Configuring to send <literal>nextval()</literal> and <literal>setval()</literal> to the proper backend</title>
-->
          <title><literal>nextval()</literal>と<literal>setval()</literal>を適切なバックエンドに送る設定</title>
          <para>
<!--
            Prior to <productname>Pgpool-II</productname><emphasis>V3.0</emphasis>,
            <literal>nextval()</literal> and <literal>setval()</literal> were known as functions writing to the database.
            You can configure this by setting <xref linkend="guc-black-function-list">
            and <xref linkend="guc-white-function-list"> as follows
-->
<productname>Pgpool-II</productname> <emphasis>V3.0</emphasis>より前のバージョンでは、固定で<literal>nextval()</literal>と<literal>setval()</literal>がデータベースに書き込みを行なう関数であると認識されていました。
以下のように<xref linkend="guc-black-function-list">と<xref linkend="guc-black-function-list">を設定することで、それと同じように動作させることができます。
              <programlisting>
white_function_list = ''
black_function_list = 'nextval,setval,lastval,currval'
              </programlisting>
          </para>
          </example>

        <note>
          <para>
<!--
            <productname>PostgreSQL</> also contains <literal>lastval()</literal> and
            <literal>currval()</literal> in addition to
            <literal>nextval()</literal> and <literal>setval()</literal>.
            Though <literal>lastval()</literal> and <literal>currval()</literal>
            are not writing function type, but it is advised to treat
            <literal>lastval()</literal> and <literal>currval()</literal>
            as writing functions to avoid errors which occur when
            these functions are accidentally load balanced.
-->
<productname>PostgreSQL</>には<literal>nextval()</literal>と<literal>setval()</literal>に加え、<literal>lastval()</literal>と<literal>currval</literal>があります。
<literal>lastval()</literal>と<literal>currval()</literal>は書き込みを行う関数ではありませんが、これらの関数が負荷分散されることで発生するエラーを防ぐため、<literal>lastval()</literal>と<literal>curval()</literal>を書き込みを行う関数として扱うのが望ましいです。
          </para>
        </note>
        <para>
<!--
          This parameter can be changed by reloading the <productname>Pgpool-II</> configurations.
-->
このパラメータは<productname>Pgpool-II</>の設定を再読み込みすることで変更可能です。
        </para>
      </listitem>
    </varlistentry>

   <varlistentry id="guc-database-redirect-preference-list" xreflabel="database_redirect_preference_list">
      <term><varname>database_redirect_preference_list</varname> (<type>string</type>)
        <indexterm>
          <primary><varname>database_redirect_preference_list</varname> configuration parameter</primary>
        </indexterm>
      </term>
      <listitem>
        <para>
<!--
         Specifies the list of <replaceable>"database-name:node id"</replaceable> pairs
         to send <acronym>SELECT</acronym> queries to a particular backend
         node for a particular database connection.
         For example, by specifying "test:1", <productname>Pgpool-II</productname>
         will redirect all <acronym>SELECT</acronym> queries to the backend node of ID 1 for
         the connection to "test" database.
         You can specify multiple <replaceable>"database name:node id"</replaceable> pair by separating them
         using comma (,).
-->
特定のデータベース接続では<acronym>SELECT</acronym>クエリが特定のバックエンドノードに送信されるように、"<replaceable>データベース名:ノードID</replaceable>"ペアのリストを指定します。
たとえば"test:1"とした場合、"test"データベースへの接続においては、<productname>Pgpool-II</productname>は全ての<acronym>SELECT</acronym>クエリをIDが1のバックエンドノードに送信します。
複数の"<replaceable>データベース名:ノードID</replaceable>"のペアを カンマ(,)で区切って指定することができます。
        </para>
        <para>
<!--
         Regular expressions are also accepted for database name.
         You can use special keywords as <replaceable>node id</replaceable>.
		 If <emphasis>"primary"</emphasis> is specified, queries are sent to the primary node, and
         if <emphasis>"standby"</emphasis> is specified, one of the standby nodes are selected randomly
		 based on weights.
-->
データベース名には正規表現を指定することできます。
<replaceable>ノードID</replaceable>には特別なキーワードを使うことができます。
"<emphasis>primary</emphasis>"が指定された場合にはクエリはプライマリノードに送られます。
また、"<emphasis>standby</emphasis>"が指定された場合はスタンバイノードのうちどれかをウェイトに応じてランダムに選択します。
        </para>

        <example id="example-database-redirect-list">
<!--
          <title>Using database_redirect_preference_list</title>
-->
          <title>database_redirect_preference_listの利用</title>
          <para>
<!--
            If you want to configure the following <acronym>SELECT</acronym> query routing rules:
-->
<acronym>SELECT</acronym>クエリのルーティングルールを以下のように設定したい場合：
          </para>

          <itemizedlist>
            <listitem>
              <para>
<!--
                Route all <acronym>SELECT</acronym> queries on <literal>postgres</literal>
                database to the primary backend node.
-->
全ての<literal>postgres</literal>データベースにおける<acronym>SELECT</acronym>クエリはプライマリバックエンドノードに送る。
              </para>
            </listitem>
            <listitem>
              <para>
<!--
                Route all <acronym>SELECT</acronym> queries on <literal>mydb0</literal> or on
                <literal>mydb1</literal> databases to backend node of ID 1.
-->
全ての<literal>mydb0</literal>または<literal>mydb1</literal>データベースにおける<acronym>SELECT</acronym>クエリはIDが1のバックエンドノードに送る。
              </para>
            </listitem>
            <listitem>
              <para>
<!--
                Route all <acronym>SELECT</acronym> queries on <literal>mydb2</literal>
                database to standby backend nodes.
-->
全ての<literal>mydb2</literal>データベースにおける<acronym>SELECT</acronym>クエリはスタンバイバックエンドノードに送る。
              </para>
            </listitem>

          </itemizedlist>
          <para>
<!--
            then the <xref linkend="guc-database-redirect-preference-list"> will be configured as follows:
-->
<xref linkend="guc-database-redirect-preference-list">は以下のように設定します。
              <programlisting>
database_redirect_preference_list = 'postgres:primary,mydb[01]:1,mydb2:standby'
              </programlisting>
          </para>
        </example>

        <para>
<!--
          This parameter can be changed by reloading the <productname>Pgpool-II</> configurations.
-->
このパラメータは<productname>Pgpool-II</>の設定を再読み込みすることで変更可能です。
        </para>
      </listitem>
    </varlistentry>

   <varlistentry id="guc-app-name-redirect-preference-list" xreflabel="app_name_redirect_preference_list">
      <term><varname>app_name_redirect_preference_list</varname> (<type>string</type>)
        <indexterm>
          <primary><varname>app_name_redirect_preference_list</varname> configuration parameter</primary>
        </indexterm>
      </term>
      <listitem>

        <para>
<!--
          Specifies the list of <replaceable>"application-name:node id"</replaceable> pairs
          to send <acronym>SELECT</acronym> queries to a particular backend
          node for a particular client application connection.
-->
特定のクライアントアプリケーションの接続では<acronym>SELECT</acronym>クエリが特定のバックエンドノードに送信されるように、"<replaceable>アプリケーション名:ノードID</replaceable>"ペアのリストを指定します。
        </para>

        <note>
          <para>
<!--
			The "Application name" is a name specified by a client when it connects to database,
            and is avalable in <productname>PostgreSQL</> <emphasis>V9.0</> or later.
-->
「アプリケーション名」とはクライアントがデータベースに接続する時に指定する名称で、<productname>PostgreSQL</> <emphasis>V9.0</>以降で利用可能です。
          </para>
         </note>

        <para>
<!--
          For example, application name of <command>psql</command> command is
          <literal>"psql"</literal>
-->
たとえば、<command>psql</command>コマンドのアプリケーション名は"<literal>psql</literal>"です。
        </para>

        <note>
          <para>
<!--
            <productname>Pgpool-II</productname> recognizes the application name
            only specified in the start-up packet sent from the client.
            Although a client can provide the application name
            later in the session, but that does not get considered by the
            <productname>Pgpool-II</productname> for query routing.
-->
<productname>Pgpool-II</productname>は、クライアントから送信されたスタートアップパケットに含まれるアプリケーション名だけを認識します。
クライアントは事後にセッションの中でアプリケーション名を指定できますが、それは<productname>Pgpool-II</productname>のクエリルーティングでは考慮されません。
          </para>
        </note>

        <para>
<!--
          The notion of <xref linkend="guc-app-name-redirect-preference-list">
          is same as the <xref linkend="guc-database-redirect-preference-list">
          thus you can also use the regular expressions for application names.
          Similarly special keyword <emphasis>"primary"</emphasis> indicates the primary node and
         <emphasis>"standby"</emphasis> indicates one of standby nodes.
-->
<xref linkend="guc-app-name-redirect-preference-list">の記法は<xref linkend="guc-database-redirect-preference-list">と同じですので、アプリケーション名には正規表現も使用できます。
同様に特別なキーワード"<emphasis>primary</emphasis>"はプライマリノードを、"<emphasis>standby</emphasis>"はスタンバイサーバのいずれかを意味します。
        </para>

        <example id="example-app-name-redirect-list">
<!--
          <title>Using app-name_redirect_preference_list</title>
-->
          <title>app_name_redirect_preference_listの利用</title>
          <para>
<!--
            If you want to configure the following <acronym>SELECT</acronym> query routing rules:
-->
<acronym>SELECT</acronym>クエリのルーティングルールを以下のように設定したい場合：
          </para>

          <itemizedlist>
            <listitem>
              <para>
<!--
                Route all <acronym>SELECT</acronym> from <literal>psql</literal>
                client to the primary backend node.
-->
全ての<literal>psql</literal>クライアントからの<acronym>SELECT</acronym>クエリはプライマリバックエンドノードに送る。
              </para>
            </listitem>
            <listitem>
              <para>
<!--
                Route all <acronym>SELECT</acronym> queries from <literal>myapp1</literal>
                client to backend node of ID 1.
-->
全ての<literal>myapp1</literal>クライアントからの<acronym>SELECT</acronym>クエリはIDが1のバックエンドノードに送る。
              </para>
            </listitem>
            <listitem>
              <para>
<!--
                Route all <acronym>SELECT</acronym> queries from <literal>myapp2</literal>
                client to standby backend nodes.
-->
全ての<literal>myapp2</literal>クライアントからの<acronym>SELECT</acronym>クエリはスタンバイバックエンドノードに送る。
              </para>
            </listitem>

          </itemizedlist>
          <para>
<!--
            then the <xref linkend="guc-app-name-redirect-preference-list"> will be configured as follows:
-->
<xref linkend="guc-app-name-redirect-preference-list">は以下のように設定します。
              <programlisting>
app_name_redirect_preference_list = 'psql:primary,myapp1:1,myapp2:standby'
              </programlisting>
          </para>
        </example>

        <note>
          <para>
<!--
            <xref linkend="guc-app-name-redirect-preference-list"> takes precedence
            over the <xref linkend="guc-database-redirect-preference-list">.
-->
<xref linkend="guc-app-name-redirect-preference-list">は、<xref linkend="guc-database-redirect-preference-list">よりも優先されます。
          </para>
        </note>

        <caution>
          <para>
<!--
            <acronym>JDBC</acronym> driver postgreSQL-9.3 and earlier versions
            does not send the application name in the startup packet even if
            the application name is specified using the <acronym>JDBC</acronym>
            driver option <literal>"ApplicationName"</literal> and
            <literal>"assumeMinServerVersion=9.0"</literal>.
            If you want to use the <xref linkend="guc-app-name-redirect-preference-list">
            feature through <acronym>JDBC</acronym>, use postgreSQL-9.4 or later version of the driver.
-->
<acronym>JDBC</acronym>ドライバのpostgresql-9.3以前のバージョンでは、<acronym>JDBC</acronym>ドライバの"<literal>ApplicationName</literal>" と "<literal>assumeMinServerVersion=9.0</literal>"オプションを指定してもスタートアップパケットの中にアプリケーション名を含ません。
<acronym>JDBC</acronym>から<xref linkend="guc-app-name-redirect-preference-list">機能を使用したければ、postgresql-9.4 以降のドライバをお使いください
          </para>
        </caution>

        <para>
<!--
          This parameter can be changed by reloading the <productname>Pgpool-II</> configurations.
-->
このパラメータは<productname>Pgpool-II</>の設定を再読み込みすることで変更可能です。
        </para>
      </listitem>
    </varlistentry>

   <varlistentry id="guc-allow-sql-comments" xreflabel="allow_sql_comments">
      <term><varname>allow_sql_comments</varname> (<type>boolean</type>)
        <indexterm>
          <primary><varname>allow_sql_comments</varname> configuration parameter</primary>
        </indexterm>
      </term>
      <listitem>
        <para>
<!--
        When set to on, <productname>Pgpool-II</productname> ignore the
        <acronym>SQL</acronym> comments when identifying if the load balance
        or query cache is possible on the query.
        When this parameter is set to off, the <acronym>SQL</acronym> comments
        on the query could effectively prevent the query from being
        load balanced or cached (pre <productname>Pgpool-II</productname>
        <emphasis>V3.4</emphasis> behavior).
-->
onに設定すると、<productname>Pgpool-II</productname>は負荷分散やクエリキャッシュができるかどうかの判定の際に<acronym>SQL</acronym>コメントを無視します。
このパラメータがoffに設定されている場合、クエリの<acronym>SQL</acronym>コメントにより、クエリの負荷分散やキャッシュを防止することができます。
（<productname>Pgpool-II</productname> <emphasis>V3.4</emphasis>より前のバージョンの動作です）。
        </para>
        <para>
<!--
          This parameter can be changed by reloading the <productname>Pgpool-II</> configurations.
					You can also use <xref linkend="SQL-PGPOOL-SET"> command to alter the value of
					this parameter for a current session.
-->
このパラメータは<productname>Pgpool-II</>の設定を再読み込みすることで変更可能です。
現在のセッションでのパラメータ値は、<xref linkend="SQL-PGPOOL-SET">コマンドで変更することもできます。
        </para>
      </listitem>
    </varlistentry>

  </variablelist>
</sect1>
